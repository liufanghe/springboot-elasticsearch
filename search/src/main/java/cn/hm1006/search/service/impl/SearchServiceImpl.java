package cn.hm1006.search.service.impl;import cn.hm1006.search.entity.Customer;import cn.hm1006.search.service.ISearchService;import cn.hm1006.search.utils.JSON;import cn.hm1006.search.vo.DataVo;import lombok.extern.slf4j.Slf4j;import org.apache.commons.beanutils.BeanUtils;import org.elasticsearch.action.index.IndexRequest;import org.elasticsearch.action.index.IndexResponse;import org.elasticsearch.action.search.SearchRequest;import org.elasticsearch.action.search.SearchResponse;import org.elasticsearch.client.RequestOptions;import org.elasticsearch.client.RestHighLevelClient;import org.elasticsearch.common.xcontent.XContentType;import org.elasticsearch.index.query.QueryBuilders;import org.elasticsearch.search.SearchHit;import org.elasticsearch.search.builder.SearchSourceBuilder;import org.elasticsearch.search.sort.SortOrder;import org.springframework.stereotype.Service;import org.springframework.util.StringUtils;import javax.annotation.Resource;import java.io.IOException;import java.lang.reflect.InvocationTargetException;import java.util.ArrayList;import java.util.List;import java.util.Map;/** * @author : Two * @version : v1.0 * @description TODO * @date : 2021/3/2 20:05 */@Service@Slf4jpublic class SearchServiceImpl implements ISearchService {    @Resource    private RestHighLevelClient client;    private String index = "openapi_customer";    private String type = "customer";    @Override    public String searchByCondition(Map<String, Object> map) {        int page = Integer.parseInt(map.get("page").toString());//起始页码        int limit = Integer.parseInt(map.get("limit").toString());//显示条数        String name = (String) map.get("name");//名称        Integer state = (Integer) map.get("state");//状态        System.out.println("SearchServiceImpl.searchByCondition");        //创建request对象        SearchRequest request = new SearchRequest(index);        request.types(type);        SearchSourceBuilder builder = new SearchSourceBuilder();        builder.sort("id", SortOrder.ASC);        if (!StringUtils.isEmpty(name)) {            builder.query(QueryBuilders.termQuery("username", name));        }        if (!StringUtils.isEmpty(state)) {            builder.query(QueryBuilders.termQuery("state", state));        }        builder.from((page - 1) * limit);        builder.size(limit);        request.source(builder);        DataVo dataVo = new DataVo();        List<Customer> list = new ArrayList<>();        try {            //执行查询            SearchResponse search = client.search(request, RequestOptions.DEFAULT);            long totalHits = search.getHits().getTotalHits();            dataVo.setCount(totalHits);            for (SearchHit hit : search.getHits().getHits()) {                Map<String, Object> sourceAsMap = hit.getSourceAsMap();                Customer customer = new Customer();                BeanUtils.populate(customer, sourceAsMap);                list.add(customer);            }            dataVo.setData(list);            return JSON.toJson(dataVo);//将响应数据转为JSON        } catch (IOException | IllegalAccessException | InvocationTargetException e) {            e.printStackTrace();        }        return null;    }    @Override    public void addCustomer(Customer customer) throws IOException {        //创建request对象        IndexRequest request = new IndexRequest(index,type,customer.getId()+"");        //将customer转为json        String json = JSON.toJson(customer);        //组合        request.source(json, XContentType.JSON);        //执行添加操作        IndexResponse response = client.index(request, RequestOptions.DEFAULT);        //判断是否添加成功        if (!"CREATED".equalsIgnoreCase(response.getResult().toString())){            log.error("【添加文档失败！！】index={},type={},customerid={}"+index,type,customer.getId());        }    }}