package cn.hm1006.search.config;import org.apache.http.HttpHost;import org.apache.http.auth.AuthScope;import org.apache.http.auth.UsernamePasswordCredentials;import org.apache.http.client.CredentialsProvider;import org.apache.http.impl.client.BasicCredentialsProvider;import org.apache.http.impl.nio.client.HttpAsyncClientBuilder;import org.elasticsearch.client.RestClient;import org.elasticsearch.client.RestClientBuilder;import org.elasticsearch.client.RestHighLevelClient;import org.springframework.beans.factory.annotation.Value;import org.springframework.context.annotation.Bean;import org.springframework.context.annotation.Configuration;/** * @author : Two * @version : v1.0 * @description TODO * @date : 2021/3/2 17:33 */@Configurationpublic class ElasticSearchConfig {    @Value("${elasticsearch.host}")    private String host;    @Value("${elasticsearch.port}")    private int port;    //配置elasticsearch客户端    @Bean    public RestHighLevelClient restHighLevelClient(){        final CredentialsProvider credentialsProvider = new BasicCredentialsProvider();        credentialsProvider.setCredentials(AuthScope.ANY,                    new UsernamePasswordCredentials("elastic","Liu123456-"));        RestClientBuilder builder = RestClient.builder(//                new HttpHost("公网地址（去掉https://）", 9200,"https"))                new HttpHost(host, port,"http"))                .setHttpClientConfigCallback(new RestClientBuilder.HttpClientConfigCallback() {                    @Override                    public HttpAsyncClientBuilder customizeHttpClient(HttpAsyncClientBuilder httpAsyncClientBuilder) {                        return httpAsyncClientBuilder.setDefaultCredentialsProvider(credentialsProvider);                    }                });        return new RestHighLevelClient(builder);    }}